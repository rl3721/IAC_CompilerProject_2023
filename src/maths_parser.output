Nonterminals useless in grammar

    translation_unit
    external_declaration
    function_definition
    declaration_or_statement
    declaration_or_statement_list
    statement
    labeled_statement
    expression_statement
    selection_statement
    iteration_statement
    jump_statement
    compound_statement


Terminals unused in grammar

    TYPE_NAME
    CASE
    DEFAULT
    IF
    ELSE
    SWITCH
    WHILE
    DO
    FOR
    GOTO
    CONTINUE
    BREAK
    RETURN
    HELLO_WORLD


Rules useless in grammar

  172 translation_unit: external_declaration
  173                 | translation_unit external_declaration

  174 external_declaration: function_definition
  175                     | declaration

  176 function_definition: declarator compound_statement
  177                    | declaration_specifiers declarator compound_statement

  178 declaration_or_statement: declaration
  179                         | statement

  180 declaration_or_statement_list: declaration_or_statement
  181                              | declaration_or_statement_list declaration_or_statement

  182 statement: labeled_statement
  183          | compound_statement
  184          | expression_statement
  185          | selection_statement
  186          | iteration_statement
  187          | jump_statement

  188 labeled_statement: IDENTIFIER ':' statement
  189                  | CASE constant_expression ':' statement
  190                  | DEFAULT ':' statement

  191 expression_statement: ';'
  192                     | expression ';'

  193 selection_statement: IF '(' expression ')' statement
  194                    | IF '(' expression ')' statement ELSE statement
  195                    | SWITCH '(' expression ')' statement

  196 iteration_statement: WHILE '(' expression ')' statement
  197                    | DO statement WHILE '(' expression ')' ';'
  198                    | FOR '(' expression_statement expression_statement ')' statement
  199                    | FOR '(' expression_statement expression_statement expression ')' statement

  200 jump_statement: GOTO IDENTIFIER ';'
  201               | CONTINUE ';'
  202               | BREAK ';'
  203               | RETURN ';'
  204               | RETURN expression ';'

  205 compound_statement: '{' '}'
  206                   | '{' declaration_or_statement_list '}'


Grammar

    0 $accept: ROOT $end

    1 ROOT: Îµ
    2     | declaration

    3 type_specifier: VOID
    4               | CHAR
    5               | SHORT
    6               | INT
    7               | LONG
    8               | FLOAT
    9               | DOUBLE
   10               | SIGNED
   11               | UNSIGNED
   12               | struct_or_union_specifier
   13               | enum_specifier

   14 storage_class_specifier: TYPEDEF
   15                        | EXTERN
   16                        | STATIC
   17                        | AUTO
   18                        | REGISTER

   19 type_qualifier: CONST
   20               | VOLATILE

   21 declaration_specifiers: storage_class_specifier
   22                       | storage_class_specifier declaration_specifiers
   23                       | type_specifier
   24                       | type_specifier declaration_specifiers

   25 direct_declarator: IDENTIFIER
   26                  | '(' declarator ')'
   27                  | direct_declarator '[' constant_expression ']'
   28                  | direct_declarator '[' ']'
   29                  | direct_declarator '(' parameter_type_list ')'
   30                  | direct_declarator '(' identifier_list ')'
   31                  | direct_declarator '(' ')'

   32 declarator: pointer direct_declarator
   33           | direct_declarator

   34 type_name: specifier_qualifier_list
   35          | specifier_qualifier_list abstract_declarator

   36 declaration: declaration_specifiers ';'
   37            | declaration_specifiers init_declarator_list ';'

   38 init_declarator: declarator
   39                | declarator '=' initializer

   40 initializer: assignment_expression
   41            | '{' initializer_list '}'
   42            | '{' initializer_list ',' '}'

   43 parameter_declaration: declaration_specifiers declarator
   44                      | declaration_specifiers abstract_declarator
   45                      | declaration_specifiers

   46 enum_specifier: ENUM '{' enumerator_list '}'
   47               | ENUM IDENTIFIER '{' enumerator_list '}'
   48               | ENUM IDENTIFIER

   49 enumerator: IDENTIFIER
   50           | IDENTIFIER '=' constant_expression

   51 pointer: '*'
   52        | '*' type_qualifier_list
   53        | '*' pointer
   54        | '*' type_qualifier_list pointer

   55 abstract_declarator: pointer
   56                    | direct_abstract_declarator
   57                    | pointer direct_abstract_declarator

   58 direct_abstract_declarator: '(' abstract_declarator ')'
   59                           | '[' ']'
   60                           | '[' constant_expression ']'
   61                           | direct_abstract_declarator '[' ']'
   62                           | direct_abstract_declarator '[' constant_expression ']'
   63                           | '(' ')'
   64                           | '(' parameter_type_list ')'
   65                           | direct_abstract_declarator '(' ')'
   66                           | direct_abstract_declarator '(' parameter_type_list ')'

   67 struct_or_union_specifier: struct_or_union IDENTIFIER '{' struct_declaration_list '}'
   68                          | struct_or_union '{' struct_declaration_list '}'
   69                          | struct_or_union IDENTIFIER

   70 struct_or_union: STRUCT
   71                | UNION

   72 struct_declaration_list: struct_declaration
   73                        | struct_declaration_list struct_declaration

   74 struct_declaration: specifier_qualifier_list struct_declarator_list ';'

   75 struct_declarator: declarator
   76                  | ':' constant_expression
   77                  | declarator ':' constant_expression

   78 specifier_qualifier_list: specifier_qualifier_list type_specifier
   79                         | type_specifier
   80                         | specifier_qualifier_list type_qualifier
   81                         | type_qualifier

   82 struct_declarator_list: struct_declarator
   83                       | struct_declarator_list ',' struct_declarator

   84 init_declarator_list: init_declarator
   85                     | init_declarator_list ',' init_declarator

   86 enumerator_list: enumerator
   87                | enumerator_list ',' enumerator

   88 initializer_list: initializer
   89                 | initializer_list ',' initializer

   90 identifier_list: IDENTIFIER
   91                | identifier_list ',' IDENTIFIER

   92 type_qualifier_list: type_qualifier
   93                    | type_qualifier_list type_qualifier

   94 parameter_type_list: parameter_list
   95                    | parameter_list ',' ELLIPSIS

   96 parameter_list: parameter_declaration
   97               | parameter_list ',' parameter_declaration

   98 argument_expression_list: assignment_expression
   99                         | argument_expression_list ',' assignment_expression

  100 primary_expression: IDENTIFIER
  101                   | CONSTANT_INT
  102                   | CONSTANT_FLOAT
  103                   | STRING_LITERAL
  104                   | '(' expression ')'

  105 postfix_expression: primary_expression
  106                   | postfix_expression '[' expression ']'
  107                   | postfix_expression '(' ')'
  108                   | postfix_expression '(' argument_expression_list ')'
  109                   | postfix_expression '.' IDENTIFIER
  110                   | postfix_expression PTR_OP IDENTIFIER
  111                   | postfix_expression INC_OP
  112                   | postfix_expression DEC_OP

  113 unary_expression: postfix_expression
  114                 | INC_OP unary_expression
  115                 | DEC_OP unary_expression
  116                 | unary_operator cast_expression
  117                 | SIZEOF unary_expression
  118                 | SIZEOF '(' type_name ')'

  119 unary_operator: '&'
  120               | '*'
  121               | '+'
  122               | '-'
  123               | '~'
  124               | '!'

  125 cast_expression: unary_expression
  126                | '(' type_name ')' cast_expression

  127 multiplicative_expression: cast_expression
  128                          | multiplicative_expression '*' cast_expression
  129                          | multiplicative_expression '/' cast_expression
  130                          | multiplicative_expression '%' cast_expression

  131 additive_expression: multiplicative_expression
  132                    | additive_expression '+' multiplicative_expression
  133                    | additive_expression '-' multiplicative_expression

  134 shift_expression: additive_expression
  135                 | shift_expression LEFT_OP additive_expression
  136                 | shift_expression RIGHT_OP additive_expression

  137 relational_expression: shift_expression
  138                      | relational_expression '<' shift_expression
  139                      | relational_expression '>' shift_expression
  140                      | relational_expression LE_OP shift_expression
  141                      | relational_expression GE_OP shift_expression

  142 equality_expression: relational_expression
  143                    | equality_expression EQ_OP relational_expression
  144                    | equality_expression NE_OP relational_expression

  145 and_expression: equality_expression
  146               | and_expression '&' equality_expression

  147 exclusive_or_expression: and_expression
  148                        | exclusive_or_expression '^' and_expression

  149 inclusive_or_expression: exclusive_or_expression
  150                        | inclusive_or_expression '|' exclusive_or_expression

  151 logical_and_expression: inclusive_or_expression
  152                       | logical_and_expression AND_OP inclusive_or_expression

  153 logical_or_expression: logical_and_expression
  154                      | logical_or_expression OR_OP logical_and_expression

  155 conditional_expression: logical_or_expression
  156                       | logical_or_expression '?' expression ':' conditional_expression

  157 assignment_expression: conditional_expression
  158                      | unary_expression '=' assignment_expression
  159                      | unary_expression MUL_ASSIGN assignment_expression
  160                      | unary_expression DIV_ASSIGN assignment_expression
  161                      | unary_expression MOD_ASSIGN assignment_expression
  162                      | unary_expression ADD_ASSIGN assignment_expression
  163                      | unary_expression SUB_ASSIGN assignment_expression
  164                      | unary_expression LEFT_ASSIGN assignment_expression
  165                      | unary_expression RIGHT_ASSIGN assignment_expression
  166                      | unary_expression AND_ASSIGN assignment_expression
  167                      | unary_expression XOR_ASSIGN assignment_expression
  168                      | unary_expression OR_ASSIGN assignment_expression

  169 expression: assignment_expression
  170           | expression ',' assignment_expression

  171 constant_expression: conditional_expression


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 124
    '%' (37) 130
    '&' (38) 119 146
    '(' (40) 26 29 30 31 58 63 64 65 66 104 107 108 118 126
    ')' (41) 26 29 30 31 58 63 64 65 66 104 107 108 118 126
    '*' (42) 51 52 53 54 120 128
    '+' (43) 121 132
    ',' (44) 42 83 85 87 89 91 95 97 99 170
    '-' (45) 122 133
    '.' (46) 109
    '/' (47) 129
    ':' (58) 76 77 156
    ';' (59) 36 37 74
    '<' (60) 138
    '=' (61) 39 50 158
    '>' (62) 139
    '?' (63) 156
    '[' (91) 27 28 59 60 61 62 106
    ']' (93) 27 28 59 60 61 62 106
    '^' (94) 148
    '{' (123) 41 42 46 47 67 68
    '|' (124) 150
    '}' (125) 41 42 46 47 67 68
    '~' (126) 123
    error (256)
    CONSTANT_INT <ival> (258) 101
    CONSTANT_FLOAT <dval> (259) 102
    IDENTIFIER <string> (260) 25 47 48 49 50 67 69 90 91 100 109 110
    STRING_LITERAL <string> (261) 103
    SIZEOF (262) 117 118
    PTR_OP (263) 110
    INC_OP (264) 111 114
    DEC_OP (265) 112 115
    LEFT_OP (266) 135
    RIGHT_OP (267) 136
    LE_OP (268) 140
    GE_OP (269) 141
    EQ_OP (270) 143
    NE_OP (271) 144
    AND_OP (272) 152
    OR_OP (273) 154
    MUL_ASSIGN (274) 159
    DIV_ASSIGN (275) 160
    MOD_ASSIGN (276) 161
    ADD_ASSIGN (277) 162
    SUB_ASSIGN (278) 163
    LEFT_ASSIGN (279) 164
    RIGHT_ASSIGN (280) 165
    AND_ASSIGN (281) 166
    XOR_ASSIGN (282) 167
    OR_ASSIGN (283) 168
    TYPE_NAME (284)
    TYPEDEF (285) 14
    EXTERN (286) 15
    STATIC (287) 16
    AUTO (288) 17
    REGISTER (289) 18
    CHAR (290) 4
    SHORT (291) 5
    INT (292) 6
    LONG (293) 7
    SIGNED (294) 10
    UNSIGNED (295) 11
    FLOAT (296) 8
    DOUBLE (297) 9
    CONST (298) 19
    VOLATILE (299) 20
    VOID (300) 3
    STRUCT (301) 70
    UNION (302) 71
    ENUM (303) 46 47 48
    ELLIPSIS (304) 95
    CASE (305)
    DEFAULT (306)
    IF (307)
    ELSE (308)
    SWITCH (309)
    WHILE (310)
    DO (311)
    FOR (312)
    GOTO (313)
    CONTINUE (314)
    BREAK (315)
    RETURN (316)
    HELLO_WORLD (317)


Nonterminals, with rules where they appear

    $accept (87)
        on left: 0
    ROOT <tree> (88)
        on left: 1 2
        on right: 0
    type_specifier <tree> (89)
        on left: 3 4 5 6 7 8 9 10 11 12 13
        on right: 23 24 78 79
    storage_class_specifier <tree> (90)
        on left: 14 15 16 17 18
        on right: 21 22
    type_qualifier <tree> (91)
        on left: 19 20
        on right: 80 81 92 93
    declaration_specifiers <tree> (92)
        on left: 21 22 23 24
        on right: 22 24 36 37 43 44 45
    direct_declarator <tree> (93)
        on left: 25 26 27 28 29 30 31
        on right: 27 28 29 30 31 32 33
    declarator <tree> (94)
        on left: 32 33
        on right: 26 38 39 43 75 77
    type_name <tree> (95)
        on left: 34 35
        on right: 118 126
    declaration <tree> (96)
        on left: 36 37
        on right: 2
    init_declarator <tree> (97)
        on left: 38 39
        on right: 84 85
    initializer <tree> (98)
        on left: 40 41 42
        on right: 39 88 89
    parameter_declaration <tree> (99)
        on left: 43 44 45
        on right: 96 97
    enum_specifier <tree> (100)
        on left: 46 47 48
        on right: 13
    enumerator <tree> (101)
        on left: 49 50
        on right: 86 87
    pointer (102)
        on left: 51 52 53 54
        on right: 32 53 54 55 57
    abstract_declarator <tree> (103)
        on left: 55 56 57
        on right: 35 44 58
    direct_abstract_declarator <tree> (104)
        on left: 58 59 60 61 62 63 64 65 66
        on right: 56 57 61 62 65 66
    struct_or_union_specifier <tree> (105)
        on left: 67 68 69
        on right: 12
    struct_or_union <tree> (106)
        on left: 70 71
        on right: 67 68 69
    struct_declaration_list <list> (107)
        on left: 72 73
        on right: 67 68 73
    struct_declaration <tree> (108)
        on left: 74
        on right: 72 73
    struct_declarator <tree> (109)
        on left: 75 76 77
        on right: 82 83
    specifier_qualifier_list <list> (110)
        on left: 78 79 80 81
        on right: 34 35 74 78 80
    struct_declarator_list <list> (111)
        on left: 82 83
        on right: 74 83
    init_declarator_list <list> (112)
        on left: 84 85
        on right: 37 85
    enumerator_list <list> (113)
        on left: 86 87
        on right: 46 47 87
    initializer_list <list> (114)
        on left: 88 89
        on right: 41 42 89
    identifier_list <list> (115)
        on left: 90 91
        on right: 30 91
    type_qualifier_list (116)
        on left: 92 93
        on right: 52 54 93
    parameter_type_list <list> (117)
        on left: 94 95
        on right: 29 64 66
    parameter_list <list> (118)
        on left: 96 97
        on right: 94 95 97
    argument_expression_list <list> (119)
        on left: 98 99
        on right: 99 108
    primary_expression <tree> (120)
        on left: 100 101 102 103 104
        on right: 105
    postfix_expression <tree> (121)
        on left: 105 106 107 108 109 110 111 112
        on right: 106 107 108 109 110 111 112 113
    unary_expression <tree> (122)
        on left: 113 114 115 116 117 118
        on right: 114 115 117 125 158 159 160 161 162 163 164 165 166 167 168
    unary_operator <tree> (123)
        on left: 119 120 121 122 123 124
        on right: 116
    cast_expression <tree> (124)
        on left: 125 126
        on right: 116 126 127 128 129 130
    multiplicative_expression <tree> (125)
        on left: 127 128 129 130
        on right: 128 129 130 131 132 133
    additive_expression <tree> (126)
        on left: 131 132 133
        on right: 132 133 134 135 136
    shift_expression <tree> (127)
        on left: 134 135 136
        on right: 135 136 137 138 139 140 141
    relational_expression <tree> (128)
        on left: 137 138 139 140 141
        on right: 138 139 140 141 142 143 144
    equality_expression <tree> (129)
        on left: 142 143 144
        on right: 143 144 145 146
    and_expression <tree> (130)
        on left: 145 146
        on right: 146 147 148
    exclusive_or_expression <tree> (131)
        on left: 147 148
        on right: 148 149 150
    inclusive_or_expression <tree> (132)
        on left: 149 150
        on right: 150 151 152
    logical_and_expression <tree> (133)
        on left: 151 152
        on right: 152 153 154
    logical_or_expression <tree> (134)
        on left: 153 154
        on right: 154 155 156
    conditional_expression <tree> (135)
        on left: 155 156
        on right: 156 157 171
    assignment_expression <tree> (136)
        on left: 157 158 159 160 161 162 163 164 165 166 167 168
        on right: 40 98 99 158 159 160 161 162 163 164 165 166 167 168 169 170
    expression <tree> (137)
        on left: 169 170
        on right: 104 106 156 170
    constant_expression <tree> (138)
        on left: 171
        on right: 27 50 60 62 76 77


State 0

    0 $accept: â¢ ROOT $end

    TYPEDEF   shift, and go to state 1
    EXTERN    shift, and go to state 2
    STATIC    shift, and go to state 3
    AUTO      shift, and go to state 4
    REGISTER  shift, and go to state 5
    CHAR      shift, and go to state 6
    SHORT     shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    SIGNED    shift, and go to state 10
    UNSIGNED  shift, and go to state 11
    FLOAT     shift, and go to state 12
    DOUBLE    shift, and go to state 13
    VOID      shift, and go to state 14
    STRUCT    shift, and go to state 15
    UNION     shift, and go to state 16
    ENUM      shift, and go to state 17

    $default  reduce using rule 1 (ROOT)

    ROOT                       go to state 18
    type_specifier             go to state 19
    storage_class_specifier    go to state 20
    declaration_specifiers     go to state 21
    declaration                go to state 22
    enum_specifier             go to state 23
    struct_or_union_specifier  go to state 24
    struct_or_union            go to state 25


State 1

   14 storage_class_specifier: TYPEDEF â¢

    $default  reduce using rule 14 (storage_class_specifier)


State 2

   15 storage_class_specifier: EXTERN â¢

    $default  reduce using rule 15 (storage_class_specifier)


State 3

   16 storage_class_specifier: STATIC â¢

    $default  reduce using rule 16 (storage_class_specifier)


State 4

   17 storage_class_specifier: AUTO â¢

    $default  reduce using rule 17 (storage_class_specifier)


State 5

   18 storage_class_specifier: REGISTER â¢

    $default  reduce using rule 18 (storage_class_specifier)


State 6

    4 type_specifier: CHAR â¢

    $default  reduce using rule 4 (type_specifier)


State 7

    5 type_specifier: SHORT â¢

    $default  reduce using rule 5 (type_specifier)


State 8

    6 type_specifier: INT â¢

    $default  reduce using rule 6 (type_specifier)


State 9

    7 type_specifier: LONG â¢

    $default  reduce using rule 7 (type_specifier)


State 10

   10 type_specifier: SIGNED â¢

    $default  reduce using rule 10 (type_specifier)


State 11

   11 type_specifier: UNSIGNED â¢

    $default  reduce using rule 11 (type_specifier)


State 12

    8 type_specifier: FLOAT â¢

    $default  reduce using rule 8 (type_specifier)


State 13

    9 type_specifier: DOUBLE â¢

    $default  reduce using rule 9 (type_specifier)


State 14

    3 type_specifier: VOID â¢

    $default  reduce using rule 3 (type_specifier)


State 15

   70 struct_or_union: STRUCT â¢

    $default  reduce using rule 70 (struct_or_union)


State 16

   71 struct_or_union: UNION â¢

    $default  reduce using rule 71 (struct_or_union)


State 17

   46 enum_specifier: ENUM â¢ '{' enumerator_list '}'
   47               | ENUM â¢ IDENTIFIER '{' enumerator_list '}'
   48               | ENUM â¢ IDENTIFIER

    IDENTIFIER  shift, and go to state 26
    '{'         shift, and go to state 27


State 18

    0 $accept: ROOT â¢ $end

    $end  shift, and go to state 28


State 19

   23 declaration_specifiers: type_specifier â¢
   24                       | type_specifier â¢ declaration_specifiers

    TYPEDEF   shift, and go to state 1
    EXTERN    shift, and go to state 2
    STATIC    shift, and go to state 3
    AUTO      shift, and go to state 4
    REGISTER  shift, and go to state 5
    CHAR      shift, and go to state 6
    SHORT     shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    SIGNED    shift, and go to state 10
    UNSIGNED  shift, and go to state 11
    FLOAT     shift, and go to state 12
    DOUBLE    shift, and go to state 13
    VOID      shift, and go to state 14
    STRUCT    shift, and go to state 15
    UNION     shift, and go to state 16
    ENUM      shift, and go to state 17

    $default  reduce using rule 23 (declaration_specifiers)

    type_specifier             go to state 19
    storage_class_specifier    go to state 20
    declaration_specifiers     go to state 29
    enum_specifier             go to state 23
    struct_or_union_specifier  go to state 24
    struct_or_union            go to state 25


State 20

   21 declaration_specifiers: storage_class_specifier â¢
   22                       | storage_class_specifier â¢ declaration_specifiers

    TYPEDEF   shift, and go to state 1
    EXTERN    shift, and go to state 2
    STATIC    shift, and go to state 3
    AUTO      shift, and go to state 4
    REGISTER  shift, and go to state 5
    CHAR      shift, and go to state 6
    SHORT     shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    SIGNED    shift, and go to state 10
    UNSIGNED  shift, and go to state 11
    FLOAT     shift, and go to state 12
    DOUBLE    shift, and go to state 13
    VOID      shift, and go to state 14
    STRUCT    shift, and go to state 15
    UNION     shift, and go to state 16
    ENUM      shift, and go to state 17

    $default  reduce using rule 21 (declaration_specifiers)

    type_specifier             go to state 19
    storage_class_specifier    go to state 20
    declaration_specifiers     go to state 30
    enum_specifier             go to state 23
    struct_or_union_specifier  go to state 24
    struct_or_union            go to state 25


State 21

   36 declaration: declaration_specifiers â¢ ';'
   37            | declaration_specifiers â¢ init_declarator_list ';'

    IDENTIFIER  shift, and go to state 31
    '('         shift, and go to state 32
    ';'         shift, and go to state 33
    '*'         shift, and go to state 34

    direct_declarator     go to state 35
    declarator            go to state 36
    init_declarator       go to state 37
    pointer               go to state 38
    init_declarator_list  go to state 39


State 22

    2 ROOT: declaration â¢

    $default  reduce using rule 2 (ROOT)


State 23

   13 type_specifier: enum_specifier â¢

    $default  reduce using rule 13 (type_specifier)


State 24

   12 type_specifier: struct_or_union_specifier â¢

    $default  reduce using rule 12 (type_specifier)


State 25

   67 struct_or_union_specifier: struct_or_union â¢ IDENTIFIER '{' struct_declaration_list '}'
   68                          | struct_or_union â¢ '{' struct_declaration_list '}'
   69                          | struct_or_union â¢ IDENTIFIER

    IDENTIFIER  shift, and go to state 40
    '{'         shift, and go to state 41


State 26

   47 enum_specifier: ENUM IDENTIFIER â¢ '{' enumerator_list '}'
   48               | ENUM IDENTIFIER â¢

    '{'  shift, and go to state 42

    $default  reduce using rule 48 (enum_specifier)


State 27

   46 enum_specifier: ENUM '{' â¢ enumerator_list '}'

    IDENTIFIER  shift, and go to state 43

    enumerator       go to state 44
    enumerator_list  go to state 45


State 28

    0 $accept: ROOT $end â¢

    $default  accept


State 29

   24 declaration_specifiers: type_specifier declaration_specifiers â¢

    $default  reduce using rule 24 (declaration_specifiers)


State 30

   22 declaration_specifiers: storage_class_specifier declaration_specifiers â¢

    $default  reduce using rule 22 (declaration_specifiers)


State 31

   25 direct_declarator: IDENTIFIER â¢

    $default  reduce using rule 25 (direct_declarator)


State 32

   26 direct_declarator: '(' â¢ declarator ')'

    IDENTIFIER  shift, and go to state 31
    '('         shift, and go to state 32
    '*'         shift, and go to state 34

    direct_declarator  go to state 35
    declarator         go to state 46
    pointer            go to state 38


State 33

   36 declaration: declaration_specifiers ';' â¢

    $default  reduce using rule 36 (declaration)


State 34

   51 pointer: '*' â¢
   52        | '*' â¢ type_qualifier_list
   53        | '*' â¢ pointer
   54        | '*' â¢ type_qualifier_list pointer

    CONST     shift, and go to state 47
    VOLATILE  shift, and go to state 48
    '*'       shift, and go to state 34

    $default  reduce using rule 51 (pointer)

    type_qualifier       go to state 49
    pointer              go to state 50
    type_qualifier_list  go to state 51


State 35

   27 direct_declarator: direct_declarator â¢ '[' constant_expression ']'
   28                  | direct_declarator â¢ '[' ']'
   29                  | direct_declarator â¢ '(' parameter_type_list ')'
   30                  | direct_declarator â¢ '(' identifier_list ')'
   31                  | direct_declarator â¢ '(' ')'
   33 declarator: direct_declarator â¢

    '('  shift, and go to state 52
    '['  shift, and go to state 53

    $default  reduce using rule 33 (declarator)


State 36

   38 init_declarator: declarator â¢
   39                | declarator â¢ '=' initializer

    '='  shift, and go to state 54

    $default  reduce using rule 38 (init_declarator)


State 37

   84 init_declarator_list: init_declarator â¢

    $default  reduce using rule 84 (init_declarator_list)


State 38

   32 declarator: pointer â¢ direct_declarator

    IDENTIFIER  shift, and go to state 31
    '('         shift, and go to state 32

    direct_declarator  go to state 55


State 39

   37 declaration: declaration_specifiers init_declarator_list â¢ ';'
   85 init_declarator_list: init_declarator_list â¢ ',' init_declarator

    ';'  shift, and go to state 56
    ','  shift, and go to state 57


State 40

   67 struct_or_union_specifier: struct_or_union IDENTIFIER â¢ '{' struct_declaration_list '}'
   69                          | struct_or_union IDENTIFIER â¢

    '{'  shift, and go to state 58

    $default  reduce using rule 69 (struct_or_union_specifier)


State 41

   68 struct_or_union_specifier: struct_or_union '{' â¢ struct_declaration_list '}'

    CHAR      shift, and go to state 6
    SHORT     shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    SIGNED    shift, and go to state 10
    UNSIGNED  shift, and go to state 11
    FLOAT     shift, and go to state 12
    DOUBLE    shift, and go to state 13
    CONST     shift, and go to state 47
    VOLATILE  shift, and go to state 48
    VOID      shift, and go to state 14
    STRUCT    shift, and go to state 15
    UNION     shift, and go to state 16
    ENUM      shift, and go to state 17

    type_specifier             go to state 59
    type_qualifier             go to state 60
    enum_specifier             go to state 23
    struct_or_union_specifier  go to state 24
    struct_or_union            go to state 25
    struct_declaration_list    go to state 61
    struct_declaration         go to state 62
    specifier_qualifier_list   go to state 63


State 42

   47 enum_specifier: ENUM IDENTIFIER '{' â¢ enumerator_list '}'

    IDENTIFIER  shift, and go to state 43

    enumerator       go to state 44
    enumerator_list  go to state 64


State 43

   49 enumerator: IDENTIFIER â¢
   50           | IDENTIFIER â¢ '=' constant_expression

    '='  shift, and go to state 65

    $default  reduce using rule 49 (enumerator)


State 44

   86 enumerator_list: enumerator â¢

    $default  reduce using rule 86 (enumerator_list)


State 45

   46 enum_specifier: ENUM '{' enumerator_list â¢ '}'
   87 enumerator_list: enumerator_list â¢ ',' enumerator

    '}'  shift, and go to state 66
    ','  shift, and go to state 67


State 46

   26 direct_declarator: '(' declarator â¢ ')'

    ')'  shift, and go to state 68


State 47

   19 type_qualifier: CONST â¢

    $default  reduce using rule 19 (type_qualifier)


State 48

   20 type_qualifier: VOLATILE â¢

    $default  reduce using rule 20 (type_qualifier)


State 49

   92 type_qualifier_list: type_qualifier â¢

    $default  reduce using rule 92 (type_qualifier_list)


State 50

   53 pointer: '*' pointer â¢

    $default  reduce using rule 53 (pointer)


State 51

   52 pointer: '*' type_qualifier_list â¢
   54        | '*' type_qualifier_list â¢ pointer
   93 type_qualifier_list: type_qualifier_list â¢ type_qualifier

    CONST     shift, and go to state 47
    VOLATILE  shift, and go to state 48
    '*'       shift, and go to state 34

    $default  reduce using rule 52 (pointer)

    type_qualifier  go to state 69
    pointer         go to state 70


State 52

   29 direct_declarator: direct_declarator '(' â¢ parameter_type_list ')'
   30                  | direct_declarator '(' â¢ identifier_list ')'
   31                  | direct_declarator '(' â¢ ')'

    IDENTIFIER  shift, and go to state 71
    TYPEDEF     shift, and go to state 1
    EXTERN      shift, and go to state 2
    STATIC      shift, and go to state 3
    AUTO        shift, and go to state 4
    REGISTER    shift, and go to state 5
    CHAR        shift, and go to state 6
    SHORT       shift, and go to state 7
    INT         shift, and go to state 8
    LONG        shift, and go to state 9
    SIGNED      shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    FLOAT       shift, and go to state 12
    DOUBLE      shift, and go to state 13
    VOID        shift, and go to state 14
    STRUCT      shift, and go to state 15
    UNION       shift, and go to state 16
    ENUM        shift, and go to state 17
    ')'         shift, and go to state 72

    type_specifier             go to state 19
    storage_class_specifier    go to state 20
    declaration_specifiers     go to state 73
    parameter_declaration      go to state 74
    enum_specifier             go to state 23
    struct_or_union_specifier  go to state 24
    struct_or_union            go to state 25
    identifier_list            go to state 75
    parameter_type_list        go to state 76
    parameter_list             go to state 77


State 53

   27 direct_declarator: direct_declarator '[' â¢ constant_expression ']'
   28                  | direct_declarator '[' â¢ ']'

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    ']'             shift, and go to state 86
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    constant_expression        go to state 109


State 54

   39 init_declarator: declarator '=' â¢ initializer

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '{'             shift, and go to state 110
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    initializer                go to state 111
    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 112
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 113
    assignment_expression      go to state 114


State 55

   27 direct_declarator: direct_declarator â¢ '[' constant_expression ']'
   28                  | direct_declarator â¢ '[' ']'
   29                  | direct_declarator â¢ '(' parameter_type_list ')'
   30                  | direct_declarator â¢ '(' identifier_list ')'
   31                  | direct_declarator â¢ '(' ')'
   32 declarator: pointer direct_declarator â¢

    '('  shift, and go to state 52
    '['  shift, and go to state 53

    $default  reduce using rule 32 (declarator)


State 56

   37 declaration: declaration_specifiers init_declarator_list ';' â¢

    $default  reduce using rule 37 (declaration)


State 57

   85 init_declarator_list: init_declarator_list ',' â¢ init_declarator

    IDENTIFIER  shift, and go to state 31
    '('         shift, and go to state 32
    '*'         shift, and go to state 34

    direct_declarator  go to state 35
    declarator         go to state 36
    init_declarator    go to state 115
    pointer            go to state 38


State 58

   67 struct_or_union_specifier: struct_or_union IDENTIFIER '{' â¢ struct_declaration_list '}'

    CHAR      shift, and go to state 6
    SHORT     shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    SIGNED    shift, and go to state 10
    UNSIGNED  shift, and go to state 11
    FLOAT     shift, and go to state 12
    DOUBLE    shift, and go to state 13
    CONST     shift, and go to state 47
    VOLATILE  shift, and go to state 48
    VOID      shift, and go to state 14
    STRUCT    shift, and go to state 15
    UNION     shift, and go to state 16
    ENUM      shift, and go to state 17

    type_specifier             go to state 59
    type_qualifier             go to state 60
    enum_specifier             go to state 23
    struct_or_union_specifier  go to state 24
    struct_or_union            go to state 25
    struct_declaration_list    go to state 116
    struct_declaration         go to state 62
    specifier_qualifier_list   go to state 63


State 59

   79 specifier_qualifier_list: type_specifier â¢

    $default  reduce using rule 79 (specifier_qualifier_list)


State 60

   81 specifier_qualifier_list: type_qualifier â¢

    $default  reduce using rule 81 (specifier_qualifier_list)


State 61

   68 struct_or_union_specifier: struct_or_union '{' struct_declaration_list â¢ '}'
   73 struct_declaration_list: struct_declaration_list â¢ struct_declaration

    CHAR      shift, and go to state 6
    SHORT     shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    SIGNED    shift, and go to state 10
    UNSIGNED  shift, and go to state 11
    FLOAT     shift, and go to state 12
    DOUBLE    shift, and go to state 13
    CONST     shift, and go to state 47
    VOLATILE  shift, and go to state 48
    VOID      shift, and go to state 14
    STRUCT    shift, and go to state 15
    UNION     shift, and go to state 16
    ENUM      shift, and go to state 17
    '}'       shift, and go to state 117

    type_specifier             go to state 59
    type_qualifier             go to state 60
    enum_specifier             go to state 23
    struct_or_union_specifier  go to state 24
    struct_or_union            go to state 25
    struct_declaration         go to state 118
    specifier_qualifier_list   go to state 63


State 62

   72 struct_declaration_list: struct_declaration â¢

    $default  reduce using rule 72 (struct_declaration_list)


State 63

   74 struct_declaration: specifier_qualifier_list â¢ struct_declarator_list ';'
   78 specifier_qualifier_list: specifier_qualifier_list â¢ type_specifier
   80                         | specifier_qualifier_list â¢ type_qualifier

    IDENTIFIER  shift, and go to state 31
    CHAR        shift, and go to state 6
    SHORT       shift, and go to state 7
    INT         shift, and go to state 8
    LONG        shift, and go to state 9
    SIGNED      shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    FLOAT       shift, and go to state 12
    DOUBLE      shift, and go to state 13
    CONST       shift, and go to state 47
    VOLATILE    shift, and go to state 48
    VOID        shift, and go to state 14
    STRUCT      shift, and go to state 15
    UNION       shift, and go to state 16
    ENUM        shift, and go to state 17
    '('         shift, and go to state 32
    '*'         shift, and go to state 34
    ':'         shift, and go to state 119

    type_specifier             go to state 120
    type_qualifier             go to state 121
    direct_declarator          go to state 35
    declarator                 go to state 122
    enum_specifier             go to state 23
    pointer                    go to state 38
    struct_or_union_specifier  go to state 24
    struct_or_union            go to state 25
    struct_declarator          go to state 123
    struct_declarator_list     go to state 124


State 64

   47 enum_specifier: ENUM IDENTIFIER '{' enumerator_list â¢ '}'
   87 enumerator_list: enumerator_list â¢ ',' enumerator

    '}'  shift, and go to state 125
    ','  shift, and go to state 67


State 65

   50 enumerator: IDENTIFIER '=' â¢ constant_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    constant_expression        go to state 126


State 66

   46 enum_specifier: ENUM '{' enumerator_list '}' â¢

    $default  reduce using rule 46 (enum_specifier)


State 67

   87 enumerator_list: enumerator_list ',' â¢ enumerator

    IDENTIFIER  shift, and go to state 43

    enumerator  go to state 127


State 68

   26 direct_declarator: '(' declarator ')' â¢

    $default  reduce using rule 26 (direct_declarator)


State 69

   93 type_qualifier_list: type_qualifier_list type_qualifier â¢

    $default  reduce using rule 93 (type_qualifier_list)


State 70

   54 pointer: '*' type_qualifier_list pointer â¢

    $default  reduce using rule 54 (pointer)


State 71

   90 identifier_list: IDENTIFIER â¢

    $default  reduce using rule 90 (identifier_list)


State 72

   31 direct_declarator: direct_declarator '(' ')' â¢

    $default  reduce using rule 31 (direct_declarator)


State 73

   43 parameter_declaration: declaration_specifiers â¢ declarator
   44                      | declaration_specifiers â¢ abstract_declarator
   45                      | declaration_specifiers â¢

    IDENTIFIER  shift, and go to state 31
    '('         shift, and go to state 128
    '['         shift, and go to state 129
    '*'         shift, and go to state 34

    $default  reduce using rule 45 (parameter_declaration)

    direct_declarator           go to state 35
    declarator                  go to state 130
    pointer                     go to state 131
    abstract_declarator         go to state 132
    direct_abstract_declarator  go to state 133


State 74

   96 parameter_list: parameter_declaration â¢

    $default  reduce using rule 96 (parameter_list)


State 75

   30 direct_declarator: direct_declarator '(' identifier_list â¢ ')'
   91 identifier_list: identifier_list â¢ ',' IDENTIFIER

    ')'  shift, and go to state 134
    ','  shift, and go to state 135


State 76

   29 direct_declarator: direct_declarator '(' parameter_type_list â¢ ')'

    ')'  shift, and go to state 136


State 77

   94 parameter_type_list: parameter_list â¢
   95                    | parameter_list â¢ ',' ELLIPSIS
   97 parameter_list: parameter_list â¢ ',' parameter_declaration

    ','  shift, and go to state 137

    $default  reduce using rule 94 (parameter_type_list)


State 78

  101 primary_expression: CONSTANT_INT â¢

    $default  reduce using rule 101 (primary_expression)


State 79

  102 primary_expression: CONSTANT_FLOAT â¢

    $default  reduce using rule 102 (primary_expression)


State 80

  100 primary_expression: IDENTIFIER â¢

    $default  reduce using rule 100 (primary_expression)


State 81

  103 primary_expression: STRING_LITERAL â¢

    $default  reduce using rule 103 (primary_expression)


State 82

  117 unary_expression: SIZEOF â¢ unary_expression
  118                 | SIZEOF â¢ '(' type_name ')'

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 138
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression  go to state 93
    postfix_expression  go to state 94
    unary_expression    go to state 139
    unary_operator      go to state 96


State 83

  114 unary_expression: INC_OP â¢ unary_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 140
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression  go to state 93
    postfix_expression  go to state 94
    unary_expression    go to state 141
    unary_operator      go to state 96


State 84

  115 unary_expression: DEC_OP â¢ unary_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 140
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression  go to state 93
    postfix_expression  go to state 94
    unary_expression    go to state 142
    unary_operator      go to state 96


State 85

  104 primary_expression: '(' â¢ expression ')'
  126 cast_expression: '(' â¢ type_name ')' cast_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    CHAR            shift, and go to state 6
    SHORT           shift, and go to state 7
    INT             shift, and go to state 8
    LONG            shift, and go to state 9
    SIGNED          shift, and go to state 10
    UNSIGNED        shift, and go to state 11
    FLOAT           shift, and go to state 12
    DOUBLE          shift, and go to state 13
    CONST           shift, and go to state 47
    VOLATILE        shift, and go to state 48
    VOID            shift, and go to state 14
    STRUCT          shift, and go to state 15
    UNION           shift, and go to state 16
    ENUM            shift, and go to state 17
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    type_specifier             go to state 59
    type_qualifier             go to state 60
    type_name                  go to state 143
    enum_specifier             go to state 23
    struct_or_union_specifier  go to state 24
    struct_or_union            go to state 25
    specifier_qualifier_list   go to state 144
    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 112
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 113
    assignment_expression      go to state 145
    expression                 go to state 146


State 86

   28 direct_declarator: direct_declarator '[' ']' â¢

    $default  reduce using rule 28 (direct_declarator)


State 87

  120 unary_operator: '*' â¢

    $default  reduce using rule 120 (unary_operator)


State 88

  119 unary_operator: '&' â¢

    $default  reduce using rule 119 (unary_operator)


State 89

  121 unary_operator: '+' â¢

    $default  reduce using rule 121 (unary_operator)


State 90

  122 unary_operator: '-' â¢

    $default  reduce using rule 122 (unary_operator)


State 91

  123 unary_operator: '~' â¢

    $default  reduce using rule 123 (unary_operator)


State 92

  124 unary_operator: '!' â¢

    $default  reduce using rule 124 (unary_operator)


State 93

  105 postfix_expression: primary_expression â¢

    $default  reduce using rule 105 (postfix_expression)


State 94

  106 postfix_expression: postfix_expression â¢ '[' expression ']'
  107                   | postfix_expression â¢ '(' ')'
  108                   | postfix_expression â¢ '(' argument_expression_list ')'
  109                   | postfix_expression â¢ '.' IDENTIFIER
  110                   | postfix_expression â¢ PTR_OP IDENTIFIER
  111                   | postfix_expression â¢ INC_OP
  112                   | postfix_expression â¢ DEC_OP
  113 unary_expression: postfix_expression â¢

    PTR_OP  shift, and go to state 147
    INC_OP  shift, and go to state 148
    DEC_OP  shift, and go to state 149
    '('     shift, and go to state 150
    '['     shift, and go to state 151
    '.'     shift, and go to state 152

    $default  reduce using rule 113 (unary_expression)


State 95

  125 cast_expression: unary_expression â¢

    $default  reduce using rule 125 (cast_expression)


State 96

  116 unary_expression: unary_operator â¢ cast_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression  go to state 93
    postfix_expression  go to state 94
    unary_expression    go to state 95
    unary_operator      go to state 96
    cast_expression     go to state 153


State 97

  127 multiplicative_expression: cast_expression â¢

    $default  reduce using rule 127 (multiplicative_expression)


State 98

  128 multiplicative_expression: multiplicative_expression â¢ '*' cast_expression
  129                          | multiplicative_expression â¢ '/' cast_expression
  130                          | multiplicative_expression â¢ '%' cast_expression
  131 additive_expression: multiplicative_expression â¢

    '*'  shift, and go to state 154
    '/'  shift, and go to state 155
    '%'  shift, and go to state 156

    $default  reduce using rule 131 (additive_expression)


State 99

  132 additive_expression: additive_expression â¢ '+' multiplicative_expression
  133                    | additive_expression â¢ '-' multiplicative_expression
  134 shift_expression: additive_expression â¢

    '+'  shift, and go to state 157
    '-'  shift, and go to state 158

    $default  reduce using rule 134 (shift_expression)


State 100

  135 shift_expression: shift_expression â¢ LEFT_OP additive_expression
  136                 | shift_expression â¢ RIGHT_OP additive_expression
  137 relational_expression: shift_expression â¢

    LEFT_OP   shift, and go to state 159
    RIGHT_OP  shift, and go to state 160

    $default  reduce using rule 137 (relational_expression)


State 101

  138 relational_expression: relational_expression â¢ '<' shift_expression
  139                      | relational_expression â¢ '>' shift_expression
  140                      | relational_expression â¢ LE_OP shift_expression
  141                      | relational_expression â¢ GE_OP shift_expression
  142 equality_expression: relational_expression â¢

    LE_OP  shift, and go to state 161
    GE_OP  shift, and go to state 162
    '<'    shift, and go to state 163
    '>'    shift, and go to state 164

    $default  reduce using rule 142 (equality_expression)


State 102

  143 equality_expression: equality_expression â¢ EQ_OP relational_expression
  144                    | equality_expression â¢ NE_OP relational_expression
  145 and_expression: equality_expression â¢

    EQ_OP  shift, and go to state 165
    NE_OP  shift, and go to state 166

    $default  reduce using rule 145 (and_expression)


State 103

  146 and_expression: and_expression â¢ '&' equality_expression
  147 exclusive_or_expression: and_expression â¢

    '&'  shift, and go to state 167

    $default  reduce using rule 147 (exclusive_or_expression)


State 104

  148 exclusive_or_expression: exclusive_or_expression â¢ '^' and_expression
  149 inclusive_or_expression: exclusive_or_expression â¢

    '^'  shift, and go to state 168

    $default  reduce using rule 149 (inclusive_or_expression)


State 105

  150 inclusive_or_expression: inclusive_or_expression â¢ '|' exclusive_or_expression
  151 logical_and_expression: inclusive_or_expression â¢

    '|'  shift, and go to state 169

    $default  reduce using rule 151 (logical_and_expression)


State 106

  152 logical_and_expression: logical_and_expression â¢ AND_OP inclusive_or_expression
  153 logical_or_expression: logical_and_expression â¢

    AND_OP  shift, and go to state 170

    $default  reduce using rule 153 (logical_or_expression)


State 107

  154 logical_or_expression: logical_or_expression â¢ OR_OP logical_and_expression
  155 conditional_expression: logical_or_expression â¢
  156                       | logical_or_expression â¢ '?' expression ':' conditional_expression

    OR_OP  shift, and go to state 171
    '?'    shift, and go to state 172

    $default  reduce using rule 155 (conditional_expression)


State 108

  171 constant_expression: conditional_expression â¢

    $default  reduce using rule 171 (constant_expression)


State 109

   27 direct_declarator: direct_declarator '[' constant_expression â¢ ']'

    ']'  shift, and go to state 173


State 110

   41 initializer: '{' â¢ initializer_list '}'
   42            | '{' â¢ initializer_list ',' '}'

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '{'             shift, and go to state 110
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    initializer                go to state 174
    initializer_list           go to state 175
    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 112
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 113
    assignment_expression      go to state 114


State 111

   39 init_declarator: declarator '=' initializer â¢

    $default  reduce using rule 39 (init_declarator)


State 112

  125 cast_expression: unary_expression â¢
  158 assignment_expression: unary_expression â¢ '=' assignment_expression
  159                      | unary_expression â¢ MUL_ASSIGN assignment_expression
  160                      | unary_expression â¢ DIV_ASSIGN assignment_expression
  161                      | unary_expression â¢ MOD_ASSIGN assignment_expression
  162                      | unary_expression â¢ ADD_ASSIGN assignment_expression
  163                      | unary_expression â¢ SUB_ASSIGN assignment_expression
  164                      | unary_expression â¢ LEFT_ASSIGN assignment_expression
  165                      | unary_expression â¢ RIGHT_ASSIGN assignment_expression
  166                      | unary_expression â¢ AND_ASSIGN assignment_expression
  167                      | unary_expression â¢ XOR_ASSIGN assignment_expression
  168                      | unary_expression â¢ OR_ASSIGN assignment_expression

    MUL_ASSIGN    shift, and go to state 176
    DIV_ASSIGN    shift, and go to state 177
    MOD_ASSIGN    shift, and go to state 178
    ADD_ASSIGN    shift, and go to state 179
    SUB_ASSIGN    shift, and go to state 180
    LEFT_ASSIGN   shift, and go to state 181
    RIGHT_ASSIGN  shift, and go to state 182
    AND_ASSIGN    shift, and go to state 183
    XOR_ASSIGN    shift, and go to state 184
    OR_ASSIGN     shift, and go to state 185
    '='           shift, and go to state 186

    $default  reduce using rule 125 (cast_expression)


State 113

  157 assignment_expression: conditional_expression â¢

    $default  reduce using rule 157 (assignment_expression)


State 114

   40 initializer: assignment_expression â¢

    $default  reduce using rule 40 (initializer)


State 115

   85 init_declarator_list: init_declarator_list ',' init_declarator â¢

    $default  reduce using rule 85 (init_declarator_list)


State 116

   67 struct_or_union_specifier: struct_or_union IDENTIFIER '{' struct_declaration_list â¢ '}'
   73 struct_declaration_list: struct_declaration_list â¢ struct_declaration

    CHAR      shift, and go to state 6
    SHORT     shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    SIGNED    shift, and go to state 10
    UNSIGNED  shift, and go to state 11
    FLOAT     shift, and go to state 12
    DOUBLE    shift, and go to state 13
    CONST     shift, and go to state 47
    VOLATILE  shift, and go to state 48
    VOID      shift, and go to state 14
    STRUCT    shift, and go to state 15
    UNION     shift, and go to state 16
    ENUM      shift, and go to state 17
    '}'       shift, and go to state 187

    type_specifier             go to state 59
    type_qualifier             go to state 60
    enum_specifier             go to state 23
    struct_or_union_specifier  go to state 24
    struct_or_union            go to state 25
    struct_declaration         go to state 118
    specifier_qualifier_list   go to state 63


State 117

   68 struct_or_union_specifier: struct_or_union '{' struct_declaration_list '}' â¢

    $default  reduce using rule 68 (struct_or_union_specifier)


State 118

   73 struct_declaration_list: struct_declaration_list struct_declaration â¢

    $default  reduce using rule 73 (struct_declaration_list)


State 119

   76 struct_declarator: ':' â¢ constant_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    constant_expression        go to state 188


State 120

   78 specifier_qualifier_list: specifier_qualifier_list type_specifier â¢

    $default  reduce using rule 78 (specifier_qualifier_list)


State 121

   80 specifier_qualifier_list: specifier_qualifier_list type_qualifier â¢

    $default  reduce using rule 80 (specifier_qualifier_list)


State 122

   75 struct_declarator: declarator â¢
   77                  | declarator â¢ ':' constant_expression

    ':'  shift, and go to state 189

    $default  reduce using rule 75 (struct_declarator)


State 123

   82 struct_declarator_list: struct_declarator â¢

    $default  reduce using rule 82 (struct_declarator_list)


State 124

   74 struct_declaration: specifier_qualifier_list struct_declarator_list â¢ ';'
   83 struct_declarator_list: struct_declarator_list â¢ ',' struct_declarator

    ';'  shift, and go to state 190
    ','  shift, and go to state 191


State 125

   47 enum_specifier: ENUM IDENTIFIER '{' enumerator_list '}' â¢

    $default  reduce using rule 47 (enum_specifier)


State 126

   50 enumerator: IDENTIFIER '=' constant_expression â¢

    $default  reduce using rule 50 (enumerator)


State 127

   87 enumerator_list: enumerator_list ',' enumerator â¢

    $default  reduce using rule 87 (enumerator_list)


State 128

   26 direct_declarator: '(' â¢ declarator ')'
   58 direct_abstract_declarator: '(' â¢ abstract_declarator ')'
   63                           | '(' â¢ ')'
   64                           | '(' â¢ parameter_type_list ')'

    IDENTIFIER  shift, and go to state 31
    TYPEDEF     shift, and go to state 1
    EXTERN      shift, and go to state 2
    STATIC      shift, and go to state 3
    AUTO        shift, and go to state 4
    REGISTER    shift, and go to state 5
    CHAR        shift, and go to state 6
    SHORT       shift, and go to state 7
    INT         shift, and go to state 8
    LONG        shift, and go to state 9
    SIGNED      shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    FLOAT       shift, and go to state 12
    DOUBLE      shift, and go to state 13
    VOID        shift, and go to state 14
    STRUCT      shift, and go to state 15
    UNION       shift, and go to state 16
    ENUM        shift, and go to state 17
    '('         shift, and go to state 128
    ')'         shift, and go to state 192
    '['         shift, and go to state 129
    '*'         shift, and go to state 34

    type_specifier              go to state 19
    storage_class_specifier     go to state 20
    declaration_specifiers      go to state 73
    direct_declarator           go to state 35
    declarator                  go to state 46
    parameter_declaration       go to state 74
    enum_specifier              go to state 23
    pointer                     go to state 131
    abstract_declarator         go to state 193
    direct_abstract_declarator  go to state 133
    struct_or_union_specifier   go to state 24
    struct_or_union             go to state 25
    parameter_type_list         go to state 194
    parameter_list              go to state 77


State 129

   59 direct_abstract_declarator: '[' â¢ ']'
   60                           | '[' â¢ constant_expression ']'

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    ']'             shift, and go to state 195
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    constant_expression        go to state 196


State 130

   43 parameter_declaration: declaration_specifiers declarator â¢

    $default  reduce using rule 43 (parameter_declaration)


State 131

   32 declarator: pointer â¢ direct_declarator
   55 abstract_declarator: pointer â¢
   57                    | pointer â¢ direct_abstract_declarator

    IDENTIFIER  shift, and go to state 31
    '('         shift, and go to state 128
    '['         shift, and go to state 129

    $default  reduce using rule 55 (abstract_declarator)

    direct_declarator           go to state 55
    direct_abstract_declarator  go to state 197


State 132

   44 parameter_declaration: declaration_specifiers abstract_declarator â¢

    $default  reduce using rule 44 (parameter_declaration)


State 133

   56 abstract_declarator: direct_abstract_declarator â¢
   61 direct_abstract_declarator: direct_abstract_declarator â¢ '[' ']'
   62                           | direct_abstract_declarator â¢ '[' constant_expression ']'
   65                           | direct_abstract_declarator â¢ '(' ')'
   66                           | direct_abstract_declarator â¢ '(' parameter_type_list ')'

    '('  shift, and go to state 198
    '['  shift, and go to state 199

    $default  reduce using rule 56 (abstract_declarator)


State 134

   30 direct_declarator: direct_declarator '(' identifier_list ')' â¢

    $default  reduce using rule 30 (direct_declarator)


State 135

   91 identifier_list: identifier_list ',' â¢ IDENTIFIER

    IDENTIFIER  shift, and go to state 200


State 136

   29 direct_declarator: direct_declarator '(' parameter_type_list ')' â¢

    $default  reduce using rule 29 (direct_declarator)


State 137

   95 parameter_type_list: parameter_list ',' â¢ ELLIPSIS
   97 parameter_list: parameter_list ',' â¢ parameter_declaration

    TYPEDEF   shift, and go to state 1
    EXTERN    shift, and go to state 2
    STATIC    shift, and go to state 3
    AUTO      shift, and go to state 4
    REGISTER  shift, and go to state 5
    CHAR      shift, and go to state 6
    SHORT     shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    SIGNED    shift, and go to state 10
    UNSIGNED  shift, and go to state 11
    FLOAT     shift, and go to state 12
    DOUBLE    shift, and go to state 13
    VOID      shift, and go to state 14
    STRUCT    shift, and go to state 15
    UNION     shift, and go to state 16
    ENUM      shift, and go to state 17
    ELLIPSIS  shift, and go to state 201

    type_specifier             go to state 19
    storage_class_specifier    go to state 20
    declaration_specifiers     go to state 73
    parameter_declaration      go to state 202
    enum_specifier             go to state 23
    struct_or_union_specifier  go to state 24
    struct_or_union            go to state 25


State 138

  104 primary_expression: '(' â¢ expression ')'
  118 unary_expression: SIZEOF '(' â¢ type_name ')'

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    CHAR            shift, and go to state 6
    SHORT           shift, and go to state 7
    INT             shift, and go to state 8
    LONG            shift, and go to state 9
    SIGNED          shift, and go to state 10
    UNSIGNED        shift, and go to state 11
    FLOAT           shift, and go to state 12
    DOUBLE          shift, and go to state 13
    CONST           shift, and go to state 47
    VOLATILE        shift, and go to state 48
    VOID            shift, and go to state 14
    STRUCT          shift, and go to state 15
    UNION           shift, and go to state 16
    ENUM            shift, and go to state 17
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    type_specifier             go to state 59
    type_qualifier             go to state 60
    type_name                  go to state 203
    enum_specifier             go to state 23
    struct_or_union_specifier  go to state 24
    struct_or_union            go to state 25
    specifier_qualifier_list   go to state 144
    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 112
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 113
    assignment_expression      go to state 145
    expression                 go to state 146


State 139

  117 unary_expression: SIZEOF unary_expression â¢

    $default  reduce using rule 117 (unary_expression)


State 140

  104 primary_expression: '(' â¢ expression ')'

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 112
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 113
    assignment_expression      go to state 145
    expression                 go to state 146


State 141

  114 unary_expression: INC_OP unary_expression â¢

    $default  reduce using rule 114 (unary_expression)


State 142

  115 unary_expression: DEC_OP unary_expression â¢

    $default  reduce using rule 115 (unary_expression)


State 143

  126 cast_expression: '(' type_name â¢ ')' cast_expression

    ')'  shift, and go to state 204


State 144

   34 type_name: specifier_qualifier_list â¢
   35          | specifier_qualifier_list â¢ abstract_declarator
   78 specifier_qualifier_list: specifier_qualifier_list â¢ type_specifier
   80                         | specifier_qualifier_list â¢ type_qualifier

    CHAR      shift, and go to state 6
    SHORT     shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    SIGNED    shift, and go to state 10
    UNSIGNED  shift, and go to state 11
    FLOAT     shift, and go to state 12
    DOUBLE    shift, and go to state 13
    CONST     shift, and go to state 47
    VOLATILE  shift, and go to state 48
    VOID      shift, and go to state 14
    STRUCT    shift, and go to state 15
    UNION     shift, and go to state 16
    ENUM      shift, and go to state 17
    '('       shift, and go to state 205
    '['       shift, and go to state 129
    '*'       shift, and go to state 34

    $default  reduce using rule 34 (type_name)

    type_specifier              go to state 120
    type_qualifier              go to state 121
    enum_specifier              go to state 23
    pointer                     go to state 206
    abstract_declarator         go to state 207
    direct_abstract_declarator  go to state 133
    struct_or_union_specifier   go to state 24
    struct_or_union             go to state 25


State 145

  169 expression: assignment_expression â¢

    $default  reduce using rule 169 (expression)


State 146

  104 primary_expression: '(' expression â¢ ')'
  170 expression: expression â¢ ',' assignment_expression

    ')'  shift, and go to state 208
    ','  shift, and go to state 209


State 147

  110 postfix_expression: postfix_expression PTR_OP â¢ IDENTIFIER

    IDENTIFIER  shift, and go to state 210


State 148

  111 postfix_expression: postfix_expression INC_OP â¢

    $default  reduce using rule 111 (postfix_expression)


State 149

  112 postfix_expression: postfix_expression DEC_OP â¢

    $default  reduce using rule 112 (postfix_expression)


State 150

  107 postfix_expression: postfix_expression '(' â¢ ')'
  108                   | postfix_expression '(' â¢ argument_expression_list ')'

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    ')'             shift, and go to state 211
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    argument_expression_list   go to state 212
    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 112
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 113
    assignment_expression      go to state 213


State 151

  106 postfix_expression: postfix_expression '[' â¢ expression ']'

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 112
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 113
    assignment_expression      go to state 145
    expression                 go to state 214


State 152

  109 postfix_expression: postfix_expression '.' â¢ IDENTIFIER

    IDENTIFIER  shift, and go to state 215


State 153

  116 unary_expression: unary_operator cast_expression â¢

    $default  reduce using rule 116 (unary_expression)


State 154

  128 multiplicative_expression: multiplicative_expression '*' â¢ cast_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression  go to state 93
    postfix_expression  go to state 94
    unary_expression    go to state 95
    unary_operator      go to state 96
    cast_expression     go to state 216


State 155

  129 multiplicative_expression: multiplicative_expression '/' â¢ cast_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression  go to state 93
    postfix_expression  go to state 94
    unary_expression    go to state 95
    unary_operator      go to state 96
    cast_expression     go to state 217


State 156

  130 multiplicative_expression: multiplicative_expression '%' â¢ cast_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression  go to state 93
    postfix_expression  go to state 94
    unary_expression    go to state 95
    unary_operator      go to state 96
    cast_expression     go to state 218


State 157

  132 additive_expression: additive_expression '+' â¢ multiplicative_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 219


State 158

  133 additive_expression: additive_expression '-' â¢ multiplicative_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 220


State 159

  135 shift_expression: shift_expression LEFT_OP â¢ additive_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 221


State 160

  136 shift_expression: shift_expression RIGHT_OP â¢ additive_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 222


State 161

  140 relational_expression: relational_expression LE_OP â¢ shift_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 223


State 162

  141 relational_expression: relational_expression GE_OP â¢ shift_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 224


State 163

  138 relational_expression: relational_expression '<' â¢ shift_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 225


State 164

  139 relational_expression: relational_expression '>' â¢ shift_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 226


State 165

  143 equality_expression: equality_expression EQ_OP â¢ relational_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 227


State 166

  144 equality_expression: equality_expression NE_OP â¢ relational_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 228


State 167

  146 and_expression: and_expression '&' â¢ equality_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 229


State 168

  148 exclusive_or_expression: exclusive_or_expression '^' â¢ and_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 230


State 169

  150 inclusive_or_expression: inclusive_or_expression '|' â¢ exclusive_or_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 231


State 170

  152 logical_and_expression: logical_and_expression AND_OP â¢ inclusive_or_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 232


State 171

  154 logical_or_expression: logical_or_expression OR_OP â¢ logical_and_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 233


State 172

  156 conditional_expression: logical_or_expression '?' â¢ expression ':' conditional_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 112
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 113
    assignment_expression      go to state 145
    expression                 go to state 234


State 173

   27 direct_declarator: direct_declarator '[' constant_expression ']' â¢

    $default  reduce using rule 27 (direct_declarator)


State 174

   88 initializer_list: initializer â¢

    $default  reduce using rule 88 (initializer_list)


State 175

   41 initializer: '{' initializer_list â¢ '}'
   42            | '{' initializer_list â¢ ',' '}'
   89 initializer_list: initializer_list â¢ ',' initializer

    '}'  shift, and go to state 235
    ','  shift, and go to state 236


State 176

  159 assignment_expression: unary_expression MUL_ASSIGN â¢ assignment_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 112
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 113
    assignment_expression      go to state 237


State 177

  160 assignment_expression: unary_expression DIV_ASSIGN â¢ assignment_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 112
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 113
    assignment_expression      go to state 238


State 178

  161 assignment_expression: unary_expression MOD_ASSIGN â¢ assignment_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 112
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 113
    assignment_expression      go to state 239


State 179

  162 assignment_expression: unary_expression ADD_ASSIGN â¢ assignment_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 112
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 113
    assignment_expression      go to state 240


State 180

  163 assignment_expression: unary_expression SUB_ASSIGN â¢ assignment_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 112
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 113
    assignment_expression      go to state 241


State 181

  164 assignment_expression: unary_expression LEFT_ASSIGN â¢ assignment_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 112
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 113
    assignment_expression      go to state 242


State 182

  165 assignment_expression: unary_expression RIGHT_ASSIGN â¢ assignment_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 112
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 113
    assignment_expression      go to state 243


State 183

  166 assignment_expression: unary_expression AND_ASSIGN â¢ assignment_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 112
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 113
    assignment_expression      go to state 244


State 184

  167 assignment_expression: unary_expression XOR_ASSIGN â¢ assignment_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 112
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 113
    assignment_expression      go to state 245


State 185

  168 assignment_expression: unary_expression OR_ASSIGN â¢ assignment_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 112
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 113
    assignment_expression      go to state 246


State 186

  158 assignment_expression: unary_expression '=' â¢ assignment_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 112
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 113
    assignment_expression      go to state 247


State 187

   67 struct_or_union_specifier: struct_or_union IDENTIFIER '{' struct_declaration_list '}' â¢

    $default  reduce using rule 67 (struct_or_union_specifier)


State 188

   76 struct_declarator: ':' constant_expression â¢

    $default  reduce using rule 76 (struct_declarator)


State 189

   77 struct_declarator: declarator ':' â¢ constant_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    constant_expression        go to state 248


State 190

   74 struct_declaration: specifier_qualifier_list struct_declarator_list ';' â¢

    $default  reduce using rule 74 (struct_declaration)


State 191

   83 struct_declarator_list: struct_declarator_list ',' â¢ struct_declarator

    IDENTIFIER  shift, and go to state 31
    '('         shift, and go to state 32
    '*'         shift, and go to state 34
    ':'         shift, and go to state 119

    direct_declarator  go to state 35
    declarator         go to state 122
    pointer            go to state 38
    struct_declarator  go to state 249


State 192

   63 direct_abstract_declarator: '(' ')' â¢

    $default  reduce using rule 63 (direct_abstract_declarator)


State 193

   58 direct_abstract_declarator: '(' abstract_declarator â¢ ')'

    ')'  shift, and go to state 250


State 194

   64 direct_abstract_declarator: '(' parameter_type_list â¢ ')'

    ')'  shift, and go to state 251


State 195

   59 direct_abstract_declarator: '[' ']' â¢

    $default  reduce using rule 59 (direct_abstract_declarator)


State 196

   60 direct_abstract_declarator: '[' constant_expression â¢ ']'

    ']'  shift, and go to state 252


State 197

   57 abstract_declarator: pointer direct_abstract_declarator â¢
   61 direct_abstract_declarator: direct_abstract_declarator â¢ '[' ']'
   62                           | direct_abstract_declarator â¢ '[' constant_expression ']'
   65                           | direct_abstract_declarator â¢ '(' ')'
   66                           | direct_abstract_declarator â¢ '(' parameter_type_list ')'

    '('  shift, and go to state 198
    '['  shift, and go to state 199

    $default  reduce using rule 57 (abstract_declarator)


State 198

   65 direct_abstract_declarator: direct_abstract_declarator '(' â¢ ')'
   66                           | direct_abstract_declarator '(' â¢ parameter_type_list ')'

    TYPEDEF   shift, and go to state 1
    EXTERN    shift, and go to state 2
    STATIC    shift, and go to state 3
    AUTO      shift, and go to state 4
    REGISTER  shift, and go to state 5
    CHAR      shift, and go to state 6
    SHORT     shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    SIGNED    shift, and go to state 10
    UNSIGNED  shift, and go to state 11
    FLOAT     shift, and go to state 12
    DOUBLE    shift, and go to state 13
    VOID      shift, and go to state 14
    STRUCT    shift, and go to state 15
    UNION     shift, and go to state 16
    ENUM      shift, and go to state 17
    ')'       shift, and go to state 253

    type_specifier             go to state 19
    storage_class_specifier    go to state 20
    declaration_specifiers     go to state 73
    parameter_declaration      go to state 74
    enum_specifier             go to state 23
    struct_or_union_specifier  go to state 24
    struct_or_union            go to state 25
    parameter_type_list        go to state 254
    parameter_list             go to state 77


State 199

   61 direct_abstract_declarator: direct_abstract_declarator '[' â¢ ']'
   62                           | direct_abstract_declarator '[' â¢ constant_expression ']'

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    ']'             shift, and go to state 255
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    constant_expression        go to state 256


State 200

   91 identifier_list: identifier_list ',' IDENTIFIER â¢

    $default  reduce using rule 91 (identifier_list)


State 201

   95 parameter_type_list: parameter_list ',' ELLIPSIS â¢

    $default  reduce using rule 95 (parameter_type_list)


State 202

   97 parameter_list: parameter_list ',' parameter_declaration â¢

    $default  reduce using rule 97 (parameter_list)


State 203

  118 unary_expression: SIZEOF '(' type_name â¢ ')'

    ')'  shift, and go to state 257


State 204

  126 cast_expression: '(' type_name ')' â¢ cast_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression  go to state 93
    postfix_expression  go to state 94
    unary_expression    go to state 95
    unary_operator      go to state 96
    cast_expression     go to state 258


State 205

   58 direct_abstract_declarator: '(' â¢ abstract_declarator ')'
   63                           | '(' â¢ ')'
   64                           | '(' â¢ parameter_type_list ')'

    TYPEDEF   shift, and go to state 1
    EXTERN    shift, and go to state 2
    STATIC    shift, and go to state 3
    AUTO      shift, and go to state 4
    REGISTER  shift, and go to state 5
    CHAR      shift, and go to state 6
    SHORT     shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    SIGNED    shift, and go to state 10
    UNSIGNED  shift, and go to state 11
    FLOAT     shift, and go to state 12
    DOUBLE    shift, and go to state 13
    VOID      shift, and go to state 14
    STRUCT    shift, and go to state 15
    UNION     shift, and go to state 16
    ENUM      shift, and go to state 17
    '('       shift, and go to state 205
    ')'       shift, and go to state 192
    '['       shift, and go to state 129
    '*'       shift, and go to state 34

    type_specifier              go to state 19
    storage_class_specifier     go to state 20
    declaration_specifiers      go to state 73
    parameter_declaration       go to state 74
    enum_specifier              go to state 23
    pointer                     go to state 206
    abstract_declarator         go to state 193
    direct_abstract_declarator  go to state 133
    struct_or_union_specifier   go to state 24
    struct_or_union             go to state 25
    parameter_type_list         go to state 194
    parameter_list              go to state 77


State 206

   55 abstract_declarator: pointer â¢
   57                    | pointer â¢ direct_abstract_declarator

    '('  shift, and go to state 205
    '['  shift, and go to state 129

    $default  reduce using rule 55 (abstract_declarator)

    direct_abstract_declarator  go to state 197


State 207

   35 type_name: specifier_qualifier_list abstract_declarator â¢

    $default  reduce using rule 35 (type_name)


State 208

  104 primary_expression: '(' expression ')' â¢

    $default  reduce using rule 104 (primary_expression)


State 209

  170 expression: expression ',' â¢ assignment_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 112
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 113
    assignment_expression      go to state 259


State 210

  110 postfix_expression: postfix_expression PTR_OP IDENTIFIER â¢

    $default  reduce using rule 110 (postfix_expression)


State 211

  107 postfix_expression: postfix_expression '(' ')' â¢

    $default  reduce using rule 107 (postfix_expression)


State 212

   99 argument_expression_list: argument_expression_list â¢ ',' assignment_expression
  108 postfix_expression: postfix_expression '(' argument_expression_list â¢ ')'

    ')'  shift, and go to state 260
    ','  shift, and go to state 261


State 213

   98 argument_expression_list: assignment_expression â¢

    $default  reduce using rule 98 (argument_expression_list)


State 214

  106 postfix_expression: postfix_expression '[' expression â¢ ']'
  170 expression: expression â¢ ',' assignment_expression

    ']'  shift, and go to state 262
    ','  shift, and go to state 209


State 215

  109 postfix_expression: postfix_expression '.' IDENTIFIER â¢

    $default  reduce using rule 109 (postfix_expression)


State 216

  128 multiplicative_expression: multiplicative_expression '*' cast_expression â¢

    $default  reduce using rule 128 (multiplicative_expression)


State 217

  129 multiplicative_expression: multiplicative_expression '/' cast_expression â¢

    $default  reduce using rule 129 (multiplicative_expression)


State 218

  130 multiplicative_expression: multiplicative_expression '%' cast_expression â¢

    $default  reduce using rule 130 (multiplicative_expression)


State 219

  128 multiplicative_expression: multiplicative_expression â¢ '*' cast_expression
  129                          | multiplicative_expression â¢ '/' cast_expression
  130                          | multiplicative_expression â¢ '%' cast_expression
  132 additive_expression: additive_expression '+' multiplicative_expression â¢

    '*'  shift, and go to state 154
    '/'  shift, and go to state 155
    '%'  shift, and go to state 156

    $default  reduce using rule 132 (additive_expression)


State 220

  128 multiplicative_expression: multiplicative_expression â¢ '*' cast_expression
  129                          | multiplicative_expression â¢ '/' cast_expression
  130                          | multiplicative_expression â¢ '%' cast_expression
  133 additive_expression: additive_expression '-' multiplicative_expression â¢

    '*'  shift, and go to state 154
    '/'  shift, and go to state 155
    '%'  shift, and go to state 156

    $default  reduce using rule 133 (additive_expression)


State 221

  132 additive_expression: additive_expression â¢ '+' multiplicative_expression
  133                    | additive_expression â¢ '-' multiplicative_expression
  135 shift_expression: shift_expression LEFT_OP additive_expression â¢

    '+'  shift, and go to state 157
    '-'  shift, and go to state 158

    $default  reduce using rule 135 (shift_expression)


State 222

  132 additive_expression: additive_expression â¢ '+' multiplicative_expression
  133                    | additive_expression â¢ '-' multiplicative_expression
  136 shift_expression: shift_expression RIGHT_OP additive_expression â¢

    '+'  shift, and go to state 157
    '-'  shift, and go to state 158

    $default  reduce using rule 136 (shift_expression)


State 223

  135 shift_expression: shift_expression â¢ LEFT_OP additive_expression
  136                 | shift_expression â¢ RIGHT_OP additive_expression
  140 relational_expression: relational_expression LE_OP shift_expression â¢

    LEFT_OP   shift, and go to state 159
    RIGHT_OP  shift, and go to state 160

    $default  reduce using rule 140 (relational_expression)


State 224

  135 shift_expression: shift_expression â¢ LEFT_OP additive_expression
  136                 | shift_expression â¢ RIGHT_OP additive_expression
  141 relational_expression: relational_expression GE_OP shift_expression â¢

    LEFT_OP   shift, and go to state 159
    RIGHT_OP  shift, and go to state 160

    $default  reduce using rule 141 (relational_expression)


State 225

  135 shift_expression: shift_expression â¢ LEFT_OP additive_expression
  136                 | shift_expression â¢ RIGHT_OP additive_expression
  138 relational_expression: relational_expression '<' shift_expression â¢

    LEFT_OP   shift, and go to state 159
    RIGHT_OP  shift, and go to state 160

    $default  reduce using rule 138 (relational_expression)


State 226

  135 shift_expression: shift_expression â¢ LEFT_OP additive_expression
  136                 | shift_expression â¢ RIGHT_OP additive_expression
  139 relational_expression: relational_expression '>' shift_expression â¢

    LEFT_OP   shift, and go to state 159
    RIGHT_OP  shift, and go to state 160

    $default  reduce using rule 139 (relational_expression)


State 227

  138 relational_expression: relational_expression â¢ '<' shift_expression
  139                      | relational_expression â¢ '>' shift_expression
  140                      | relational_expression â¢ LE_OP shift_expression
  141                      | relational_expression â¢ GE_OP shift_expression
  143 equality_expression: equality_expression EQ_OP relational_expression â¢

    LE_OP  shift, and go to state 161
    GE_OP  shift, and go to state 162
    '<'    shift, and go to state 163
    '>'    shift, and go to state 164

    $default  reduce using rule 143 (equality_expression)


State 228

  138 relational_expression: relational_expression â¢ '<' shift_expression
  139                      | relational_expression â¢ '>' shift_expression
  140                      | relational_expression â¢ LE_OP shift_expression
  141                      | relational_expression â¢ GE_OP shift_expression
  144 equality_expression: equality_expression NE_OP relational_expression â¢

    LE_OP  shift, and go to state 161
    GE_OP  shift, and go to state 162
    '<'    shift, and go to state 163
    '>'    shift, and go to state 164

    $default  reduce using rule 144 (equality_expression)


State 229

  143 equality_expression: equality_expression â¢ EQ_OP relational_expression
  144                    | equality_expression â¢ NE_OP relational_expression
  146 and_expression: and_expression '&' equality_expression â¢

    EQ_OP  shift, and go to state 165
    NE_OP  shift, and go to state 166

    $default  reduce using rule 146 (and_expression)


State 230

  146 and_expression: and_expression â¢ '&' equality_expression
  148 exclusive_or_expression: exclusive_or_expression '^' and_expression â¢

    '&'  shift, and go to state 167

    $default  reduce using rule 148 (exclusive_or_expression)


State 231

  148 exclusive_or_expression: exclusive_or_expression â¢ '^' and_expression
  150 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression â¢

    '^'  shift, and go to state 168

    $default  reduce using rule 150 (inclusive_or_expression)


State 232

  150 inclusive_or_expression: inclusive_or_expression â¢ '|' exclusive_or_expression
  152 logical_and_expression: logical_and_expression AND_OP inclusive_or_expression â¢

    '|'  shift, and go to state 169

    $default  reduce using rule 152 (logical_and_expression)


State 233

  152 logical_and_expression: logical_and_expression â¢ AND_OP inclusive_or_expression
  154 logical_or_expression: logical_or_expression OR_OP logical_and_expression â¢

    AND_OP  shift, and go to state 170

    $default  reduce using rule 154 (logical_or_expression)


State 234

  156 conditional_expression: logical_or_expression '?' expression â¢ ':' conditional_expression
  170 expression: expression â¢ ',' assignment_expression

    ','  shift, and go to state 209
    ':'  shift, and go to state 263


State 235

   41 initializer: '{' initializer_list '}' â¢

    $default  reduce using rule 41 (initializer)


State 236

   42 initializer: '{' initializer_list ',' â¢ '}'
   89 initializer_list: initializer_list ',' â¢ initializer

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '{'             shift, and go to state 110
    '}'             shift, and go to state 264
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    initializer                go to state 265
    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 112
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 113
    assignment_expression      go to state 114


State 237

  159 assignment_expression: unary_expression MUL_ASSIGN assignment_expression â¢

    $default  reduce using rule 159 (assignment_expression)


State 238

  160 assignment_expression: unary_expression DIV_ASSIGN assignment_expression â¢

    $default  reduce using rule 160 (assignment_expression)


State 239

  161 assignment_expression: unary_expression MOD_ASSIGN assignment_expression â¢

    $default  reduce using rule 161 (assignment_expression)


State 240

  162 assignment_expression: unary_expression ADD_ASSIGN assignment_expression â¢

    $default  reduce using rule 162 (assignment_expression)


State 241

  163 assignment_expression: unary_expression SUB_ASSIGN assignment_expression â¢

    $default  reduce using rule 163 (assignment_expression)


State 242

  164 assignment_expression: unary_expression LEFT_ASSIGN assignment_expression â¢

    $default  reduce using rule 164 (assignment_expression)


State 243

  165 assignment_expression: unary_expression RIGHT_ASSIGN assignment_expression â¢

    $default  reduce using rule 165 (assignment_expression)


State 244

  166 assignment_expression: unary_expression AND_ASSIGN assignment_expression â¢

    $default  reduce using rule 166 (assignment_expression)


State 245

  167 assignment_expression: unary_expression XOR_ASSIGN assignment_expression â¢

    $default  reduce using rule 167 (assignment_expression)


State 246

  168 assignment_expression: unary_expression OR_ASSIGN assignment_expression â¢

    $default  reduce using rule 168 (assignment_expression)


State 247

  158 assignment_expression: unary_expression '=' assignment_expression â¢

    $default  reduce using rule 158 (assignment_expression)


State 248

   77 struct_declarator: declarator ':' constant_expression â¢

    $default  reduce using rule 77 (struct_declarator)


State 249

   83 struct_declarator_list: struct_declarator_list ',' struct_declarator â¢

    $default  reduce using rule 83 (struct_declarator_list)


State 250

   58 direct_abstract_declarator: '(' abstract_declarator ')' â¢

    $default  reduce using rule 58 (direct_abstract_declarator)


State 251

   64 direct_abstract_declarator: '(' parameter_type_list ')' â¢

    $default  reduce using rule 64 (direct_abstract_declarator)


State 252

   60 direct_abstract_declarator: '[' constant_expression ']' â¢

    $default  reduce using rule 60 (direct_abstract_declarator)


State 253

   65 direct_abstract_declarator: direct_abstract_declarator '(' ')' â¢

    $default  reduce using rule 65 (direct_abstract_declarator)


State 254

   66 direct_abstract_declarator: direct_abstract_declarator '(' parameter_type_list â¢ ')'

    ')'  shift, and go to state 266


State 255

   61 direct_abstract_declarator: direct_abstract_declarator '[' ']' â¢

    $default  reduce using rule 61 (direct_abstract_declarator)


State 256

   62 direct_abstract_declarator: direct_abstract_declarator '[' constant_expression â¢ ']'

    ']'  shift, and go to state 267


State 257

  118 unary_expression: SIZEOF '(' type_name ')' â¢

    $default  reduce using rule 118 (unary_expression)


State 258

  126 cast_expression: '(' type_name ')' cast_expression â¢

    $default  reduce using rule 126 (cast_expression)


State 259

  170 expression: expression ',' assignment_expression â¢

    $default  reduce using rule 170 (expression)


State 260

  108 postfix_expression: postfix_expression '(' argument_expression_list ')' â¢

    $default  reduce using rule 108 (postfix_expression)


State 261

   99 argument_expression_list: argument_expression_list ',' â¢ assignment_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 112
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 113
    assignment_expression      go to state 268


State 262

  106 postfix_expression: postfix_expression '[' expression ']' â¢

    $default  reduce using rule 106 (postfix_expression)


State 263

  156 conditional_expression: logical_or_expression '?' expression ':' â¢ conditional_expression

    CONSTANT_INT    shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    IDENTIFIER      shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    INC_OP          shift, and go to state 83
    DEC_OP          shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 87
    '&'             shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '~'             shift, and go to state 91
    '!'             shift, and go to state 92

    primary_expression         go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 269


State 264

   42 initializer: '{' initializer_list ',' '}' â¢

    $default  reduce using rule 42 (initializer)


State 265

   89 initializer_list: initializer_list ',' initializer â¢

    $default  reduce using rule 89 (initializer_list)


State 266

   66 direct_abstract_declarator: direct_abstract_declarator '(' parameter_type_list ')' â¢

    $default  reduce using rule 66 (direct_abstract_declarator)


State 267

   62 direct_abstract_declarator: direct_abstract_declarator '[' constant_expression ']' â¢

    $default  reduce using rule 62 (direct_abstract_declarator)


State 268

   99 argument_expression_list: argument_expression_list ',' assignment_expression â¢

    $default  reduce using rule 99 (argument_expression_list)


State 269

  156 conditional_expression: logical_or_expression '?' expression ':' conditional_expression â¢

    $default  reduce using rule 156 (conditional_expression)
